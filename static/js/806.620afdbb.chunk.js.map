{"version":3,"file":"static/js/806.620afdbb.chunk.js","mappings":"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","sources":["components/Error/Error.js","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/HomePage/HomePage.js","utils/fetchAPI.js"],"sourcesContent":["export const Error = () => {\n  return <div>Error. Sorry no find any films</div>;\n};\n","import { Vortex } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <div>\n      <Vortex />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movies__list\":\"MoviesList_movies__list__omDb8\",\"movies_item\":\"MoviesList_movies_item__k-dO4\",\"movies__link\":\"MoviesList_movies__link__As+6z\",\"movies__img\":\"MoviesList_movies__img__kyXl8\",\"movies__description\":\"MoviesList_movies__description__XsGk1\"};","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.movies__list}>\n      {movies.map(({ id, title, name, poster_path }) => {\n        return (\n          <li key={id} className={css.movies_item}>\n            <Link\n              className={css.movies__link}\n              to={`/movies/${id}`}\n              state={{ from: location }}\n            >\n              <img\n                className={css.movies__img}\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                alt={title}\n                width=\"270\"\n                height=\"409\"\n              />\n              <p className={css.movies__description}>{title || name}</p>\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\n\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { Error } from 'components/Error/Error';\n\nimport { getFetchTrending } from 'utils/fetchAPI';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoadind] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setLoadind(true);\n    (async () => {\n      try {\n        const movies = await getFetchTrending();\n        setMovies(movies);\n        setLoadind(false);\n      } catch (error) {\n        setLoadind(false);\n        setError(true);\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      {movies.length && (\n        <>\n          <h2>Trending today</h2>\n          <MoviesList movies={movies} />\n        </>\n      )}\n      {loading && <Loader />}\n      {error && <Error />}\n    </>\n  );\n};\n\nexport default HomePage;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '2c7f5557ee0d3184d19fc3f4461cd963';\n\nexport const getFetchTrending = async () => {\n  const response = await fetch(`${BASE_URL}trending/all/day?api_key=${KEY}`);\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  throw new Error('Error responsive');\n};\n\nexport const getFetchById = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n  if (response.ok) {\n    const data = await response.json();\n    return data;\n  }\n  throw new Error('Error responsive');\n};\n\nexport const getFetchByCredits = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  if (response.ok) {\n    const data = await response.json();\n    return data.cast;\n  }\n  throw new Error('Error responsive');\n};\n\nexport const getFetchByReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  throw new Error('Error responsive');\n};\n\nexport const getFetchQuery = async query => {\n  const response = await fetch(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  if (response.ok) {\n    const data = await response.json();\n    return data.results;\n  }\n  throw new Error('Error responsive');\n};\n"],"names":["Error","Loader","MoviesList","movies","location","useLocation","className","css","map","id","title","name","poster_path","to","state","from","src","alt","width","height","useState","setMovies","loading","setLoadind","error","setError","useEffect","getFetchTrending","length","BASE_URL","KEY","fetch","response","ok","json","data","results","getFetchById","movieId","getFetchByCredits","cast","getFetchByReviews","getFetchQuery","query"],"sourceRoot":""}